<public:component>
<public:attach event="onpropertychange" onevent="PNG.fix()" />

<script type="text/javascript">
/*
	Class: PNG
	fixes PNG images in Internet Explorer 5.5 and 6
	
	31/10/07 Fix Added for Input fields.
	TODO : Need to test efficiency.
	TODO : Need a fix for image maps and inputs of type="image" and "filename.png"
*/
var PNG = new (function(){
	this.blank = evance.core.Interface.blankGifImage;
	this.alphaFilter = 'DXImageTransform.Microsoft.AlphaImageLoader';
	
	this.filter = function(img, method){
		if(filters[this.alphaFilter]){
			filters[this.alphaFilter].enabled = (img)?true:false;
			if(img){
				filters[this.alphaFilter].src = img;
				filters[this.alphaFilter].sizingMethod = method;
			}
		} else if (img) {
			style.filter = 'progid:'+this.alphaFilter+'(src="'+img+'",sizingMethod="'+method+'")';
		}
	}
	
	this.fixBackgroundImage = function(bgImage){
		if (bgImage.match(/^url[("']+(.*\.png)[)"']+$/i)){
			var imageSrc = RegExp.$1;
			if(currentStyle.width == 'auto' && currentStyle.height == 'auto'){
				style.width = offsetWidth + 'px';
			}
			// remove the background image src location
			// this will be reset in the IE filter
			style.backgroundImage = 'none';
			this.filter(imageSrc, 'crop');
			// IE link fix.
			for (var i = 0; i < childNodes.length; i++){
				// set all childNodes to a relative position
				// this hopes to fix the non-clickable links issue
				if(childNodes[i].style) childNodes[i].style.position = 'relative';
			}
		} else {
			this.filter();
		}
	}
	
	this.fixImage = function(){
		if ((/\.png$/i).test(src)){
   			if (currentStyle.width == 'auto' && currentStyle.height == 'auto'){
				style.width = offsetWidth + 'px';
			}
			this.filter(src, 'scale');
			src = this.blank;
		} else if (src.indexOf(this.blank) < 0){
			this.filter();
		}
	}
	
	this.fixInputs = function(nodes){
		for(i=0; i < nodes.length; i++){
			if(nodes[i].nodeName.toLowerCase() == 'input'){
				var type = nodes[i].getAttribute('type').toLowerCase();
				if((type != 'submit' && type != 'image') && nodes[i].style){
					var bgImage = nodes[i].currentStyle.backgroundImage || nodes[i].style.backgroundImage;
					var bgColor = nodes[i].currentStyle.backgroundColor || nodes[i].style.backgroundColor;
					if((!bgColor && bgImage == 'none') || (bgColor == 'transparent' && bgImage == 'none')){
						nodes[i].style.backgroundImage = 'url('+this.blank+')';
					}
				}
			}
		}
	}
	
	this.fix = function(){
		// Make sure we only work on IE 5.5 or 6
		if (!/MSIE (5\.5|6\.)/.test(navigator.userAgent) ||
  		(event && !/(background|src)/.test(event.propertyName))) return;
		
		// get the background image for this style
		var bgImage = currentStyle.backgroundImage || style.backgroundImage;
		
		if (bgImage && (bgImage != 'none')){
			this.fixBackgroundImage(bgImage);
		} else if(tagName.toLowerCase() == 'img'){
			this.fixImage();
		}
		this.fixInputs(childNodes);
	}
});

PNG.fix();

</script>
</public:component>